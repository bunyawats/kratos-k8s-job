// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: query.sql

package mysql

import (
	"context"
	"database/sql"
)

const createCurrentTemplate = `-- name: CreateCurrentTemplate :execresult
INSERT INTO current_template (
    template_name, version
) VALUES (
    ?, ?
)
`

type CreateCurrentTemplateParams struct {
	TemplateName string
	Version      string
}

func (q *Queries) CreateCurrentTemplate(ctx context.Context, arg CreateCurrentTemplateParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, createCurrentTemplate, arg.TemplateName, arg.Version)
}

const getCurrentTemplate = `-- name: GetCurrentTemplate :one
SELECT template_name, version, id, create_timestamp FROM current_template
WHERE id = ? LIMIT 1
`

func (q *Queries) GetCurrentTemplate(ctx context.Context, id int64) (CurrentTemplate, error) {
	row := q.db.QueryRowContext(ctx, getCurrentTemplate, id)
	var i CurrentTemplate
	err := row.Scan(
		&i.TemplateName,
		&i.Version,
		&i.ID,
		&i.CreateTimestamp,
	)
	return i, err
}
